(check-expect (foldr + 0 (list 1 2 3 4 5 6)) 21)
(check-expect ((compose add1 add1) 1) 3)
(check-expect (filter number? (list 1 2 'a "hello" 3 4)) (list 1 2 3 4))
(check-expect (map (lambda (x) (* x 2)) (list 1 2 3 4)) (list 2 4 6 8))
(check-expect (apply max (list 1 2 3 4 5)) 5)
(check-expect (andmap even? (list 0 2 4 6 8)) #t)
(check-expect (ormap even? (list 1 3 5 7 9)) #f)
(check-expect (ormap even? (list 1 3 5 7 9 11 12 13 15)) #t)
(check-expect (andmap even? (list 0 1 2)) #f)
(check-expect (build-list 5 (lambda (x) (* 2 x))) (list 0 2 4 6 8))
(check-expect (range 0 10 2) (list 0 2 4 6 8))
(check-satisfied 0 even?)
(check-satisfied 1 even?)