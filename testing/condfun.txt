(define unk (make-posn 3 2))
;; info function Any -> String
;; gets the info of a variable.
(define info (Î»(x) (cond [(number? x) (number->string x)]
      [(boolean? x) (boolean->string x)] ;; boolean case
      [(string? x) x]
      [(symbol? x) (symbol->string x)]
      [(posn? x) (string-append "posn of " (number->string (posn-x x)) " and " (number->string (posn-y x)))])))
(define sum-lon (lambda (lox) (foldr + 0 lox)))
(sum-lon (list 1 2 3 4))