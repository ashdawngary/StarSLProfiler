(define-struct posn (x y))
(define origin (make-posn 0 0))
(define rtri (make-posn 3 4))
(define xv (posn-x rtri))
(define yv (posn-y rtri))
(define xsq (sqr xv))
(define ysq (sqr yv))
(define sqrdist (+ xsq ysq))
(define distideal (sqrt sqrdist))
(define dist/posn (lambda (psn) (sqrt (+ (sqr (posn-x psn)) (sqr (posn-y psn))))))
(check-expect (dist/posn rtri) distideal)
(define funbox (lambda (x) (lambda (y) (lambda (z) (* x y z)))))
(define unwrap1 (funbox 4))
(define unwrap2 (unwrap1 3))
(define unwrap3 (unwrap2 2))
(define threelam (lambda (x y z) (* z y x)))
(check-expect unwrap3 (threelam 4 3 2))